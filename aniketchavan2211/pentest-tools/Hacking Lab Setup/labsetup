#!/usr/bin/env python3

import argparse
import os
import sys

def add_host_entry(domain, ip):
    hosts_file_path = 'data/data/com.termux/files/usr/etc/hosts'
    # termux_relative_path = '$PREFIX/etc/hosts'
    # hosts_file_path = '/etc/hosts'

    try:
        with open(hosts_file_path, 'r') as hosts_file:
            existing_entries = hosts_file.read()

        if f'{ip}\t{domain}' in existing_entries:
            print(f'Host entry already exists: {domain} with IP {ip}')
        else:
            with open(hosts_file_path, 'a') as hosts_file:
                hosts_file.write(f'\n{ip}\t{domain}')
            print(f'Host entry added: {domain} with IP {ip}')
    except Exception as e:
        print(f'Error adding host entry: {e}')

def main():
    parser = argparse.ArgumentParser(description='Script with flag arguments')
    parser.add_argument('-f', '--flag', action='store_true', help='Flag argument')
    parser.add_argument('-d', '--dir', action='store_true', help='Use current directory and add "_PWNED"')
    parser.add_argument('-ip', '--add-host', nargs=2, metavar=('DOMAIN', 'IP'),
                        help='Add a new host entry to the hosts file directly')
    args = parser.parse_args()

    if not args.flag and not args.dir and not args.add_host:
        parser.print_help()
    else:
        if args.flag:
            user_input = input('Enter the flag: ')

            # Save flag.txt in the current working directory
            flag_file_path = os.path.join(os.getcwd(), 'flag.txt')

            try:
                if os.path.exists(flag_file_path):
                    with open(flag_file_path, 'r') as existing_flag_file:
                        existing_text = existing_flag_file.read().strip()

                    if existing_text:
                        print(f'Current content in flag.txt: {existing_text}')
                        choice = input('Do you want to replace (R), update (U), or keep existing (N)? ').upper()

                        if choice == 'R':
                            with open(flag_file_path, 'w') as flag_file:
                                flag_file.write(user_input)
                            print('Flag replaced in flag.txt')

                        elif choice == 'U':
                            with open(flag_file_path, 'a') as flag_file:
                                flag_file.write('\n' + user_input)
                            print('Flag updated in flag.txt')

                        elif choice == 'N':
                            print('Keeping existing content in flag.txt')

                        else:
                            print('Invalid choice. Keeping existing content in flag.txt')

                    else:
                        with open(flag_file_path, 'w') as flag_file:
                            flag_file.write(user_input)
                        print('Flag stored in flag.txt')

                else:
                    with open(flag_file_path, 'w') as flag_file:
                        flag_file.write(user_input)
                    print('Flag stored in flag.txt')

            except Exception as e:
                print(f'Error writing to {flag_file_path}: {e}')

        if args.dir:
            current_directory = os.getcwd()

            if "_PWNED" in current_directory:
                print(f'Error: Directory {current_directory} is already named with "_PWNED".')
                sys.exit(1)

            new_directory = current_directory + '_PWNED'

            try:
                if os.path.exists(new_directory):
                    print(f'Error: Directory {new_directory} already exists.')
                    sys.exit(1)

                os.rename(current_directory, new_directory)
                print(f'Changed directory to: {new_directory}')
            except Exception as e:
                print(f'Error renaming directory: {e}')
                sys.exit(1)

        if args.add_host:
            domain, ip = args.add_host
            add_host_entry(domain, ip)

if __name__ == "__main__":
    main()
